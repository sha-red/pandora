/*
    Pan.do/ra Settings

    You can edit this file.
*/
{
    /*
    "annotations" configures the annotation panel.
        "showUsers": If true, include list of users in menu, so that
            annotations by specific users can be turned on and off
    */
    "annotations": {
        "showUsers": false
    },
    /*
    "cantPlay" specifies the UI for clips or videos that a user is not allowed
    to play.
        "icon": Symbol name (see https://oxjs.org/#examples/symbols/live)
        "link": URL loaded on click (for example "/rights", if "rights" is
            defined in "sitePages")
        "text": Text shown on mouseover
    */
    "cantPlay": {
        "icon": "NoCopyright",
        "link": "/rights",
        "text": "This part of this video is not available in<br/>your part of your country. Sorry for that."
    },
    /*
    "capabilities" are permissions per user level.
    Depending on the capability, this is either global:
        {level: true} means a user of that level has the capability
    or related to the rights levels of items or texts:
        {level: x} means a user of that level has the capability for items or
        texts of a rights level up to and including x
    */
    "capabilities": {
        "canAddItems": {"staff": true, "admin": true},
        "canDownloadVideo": {"guest": -1, "member": -1, "friend": -1, "staff": -1, "admin": -1},
        "canEditAnnotations": {"staff": true, "admin": true},
        "canEditEntities": {"staff": true, "admin": true},
        "canEditDocuments": {"staff": true, "admin": true},
        "canEditEvents": {"staff": true, "admin": true},
        "canEditFeaturedEdits": {"staff": true, "admin": true},
        "canEditFeaturedLists": {"staff": true, "admin": true},
        "canEditFeaturedTexts": {"staff": true, "admin": true},
        "canEditMedia": {"staff": true, "admin": true},
        "canEditMetadata": {"staff": true, "admin": true},
        "canEditPlaces": {"staff": true, "admin": true},
        "canEditRightsLevel": {"staff": true, "admin": true},
        "canEditSitePages": {"staff": true, "admin": true},
        "canEditUsers": {"admin": true},
        "canExportAnnotations": {},
        "canImportAnnotations": {},
        "canManageDocuments": {"staff": true, "admin": true},
        "canManageEntities": {"staff": true, "admin": true},
        "canManagePlacesAndEvents": {"staff": true, "admin": true},
        "canManageTitlesAndNames": {"staff": true, "admin": true},
        "canManageUsers": {"staff": true, "admin": true},
        "canPlayClips": {"guest": 2, "member": 2, "friend": 4, "staff": 4, "admin": 4},
        "canPlayVideo": {"guest": 1, "member": 1, "friend": 4, "staff": 4, "admin": 4},
        "canReadText": {"guest": 0, "member": 0, "friend": 1, "staff": 1, "admin": 1},
        "canRemoveItems": {"admin": true},
        "canSeeAccessed": {"staff": true, "admin": true},
        "canSeeDebugMenu": {"staff": true, "admin": true},
        "canSeeExtraItemViews": {"staff": true, "admin": true},
        "canSeeMedia": {"staff": true, "admin": true},
        "canSeeItem": {"guest": 3, "member": 3, "friend": 4, "staff": 4, "admin": 4},
        "canSeeSize": {"friend": true, "staff": true, "admin": true},
        "canSeeSoftwareVersion": {"staff": true, "admin": true},
        "canSendMail": {"staff": true, "admin": true}
    },
    /*
    "clipKeys" are the properties that clips can be sorted by (the values are
    populated automatically). If "sortOperator" is not specified, it will be
    "+" (ascending) for strings and "-" (descending) for numbers.
    */
    "clipKeys": [
        {"id": "text", "title": "Text", "type": "string"},
        {"id": "position", "title": "Position", "type": "float", "sortOperator": "+"},
        {"id": "duration", "title": "Duration", "type": "float"},
        {"id": "hue", "title": "Hue", "type": "float", "sortOperator": "+"},
        {"id": "saturation", "title": "Saturation", "type": "float"},
        {"id": "lightness", "title": "Lightness", "type": "float"},
        {"id": "volume", "title": "Volume", "type": "float"}
    ],
    /*
    "clipLayers" is the ordered list of public layers that will appear as the
    text of clips (in grid view, below the icon). Excluding a layer from this
    list means it will not be included in find annotations.
    */
    "clipLayers": ["subtitles"],
    /*
    "entities" can be used to store arbitrary data. They can be referenced in
    annotations, info view, or elsewhere. Each entry defines a specific class
    of entity object, its properties and their types (for example an "actor"
    with "name", "biography", "portrait" etc). The HTML representation for
    entities can be customized by adding "/static/js/entity.SITENAME.js".
    Each entity has the following properties:
        "id": Unique internal ID (can be referenced in "layers")
        "title": Human-readable title
        "keys": List of properties
        "sortType": Optional. If set to "person" or "title", then the sort
            order can be configured in "Manage Names" or "Manage Titles"
    Each key has the properties "id", "title" and "type". "type" can be
    "boolean", "number", "string", "text", "document" (reference to the id of a
    document added via "Manage Documents") or ["string"] (list of strings).
    "id" and "name" keys are required. If "alternativeNames" is present, these
    will act as synonyms when autocompleting values entered as annotations.
    */
    "entities": [],
    /*
    "help" specifies the sections of the help dialog.
    */
    "help": [
        {"id": "help", "title": "Help"},
        {"id": "accounts", "title": "Accounts"},
        {"id": "navigation", "title": "Navigation"},
        {"id": "views", "title": "Views"},
        {"id": "timelines", "title": "Timelines"},
        {"id": "clips", "title": "Clips"},
        {"id": "maps", "title": "Maps"},
        {"id": "calendars", "title": "Calendars"},
        {"id": "find", "title": "Find"},
        {"id": "filters", "title": "Filters"},
        {"id": "lists", "title": "Lists"},
        {"id": "player", "title": "Player"},
        {"id": "editor", "title": "Editor"},
        {"id": "documents", "title": "Documents"},
        {"id": "entities", "title": "Entities"},
        {"id": "edits", "title": "Edits"},
        {"id": "texts", "title": "Texts"},
        {"id": "embeds", "title": "Embeds"}
    ],
    /*
    "itemKeys" defines the metadata associated with each item. Required keys
    are "*", "id" and "title". Annotation layers can be referenced too, which
    makes them available in the find element. Adding a key with "annotations"
    as id adds a "find in any annotation layer" option. Further, adding a key
    with "random" as id can be used for a random sort order.
    An itemKey must have the following properties:
        "id": The unique id of the key (as used by the server)
        "title": The title of the key (as displayed by the client)
        "type": Can be "boolean", "date", "enum", "float", "hue", "integer",
            "layer", "string", "text", "time" or ["..."] (list of values of
            this type). If type is "layer", this is a reference to the
            annotations layer with the same id.
    and can have any of the following properties:
        "additionalSort": Ordered list of {key, operator} objects, where key is
            another itemKey and operator is "+" or "-". This can be used to
            override user.ui.listSort when results are sorted by this key.
        "autocomplete": If true, the find element will provide autocomplete
        "autocompleteSort": Sort order of autocomplete suggestions
        "capability": A capability required to see data for this key
        "columnRequired": If true, the column can't be removed from list view
        "columnWidth": Default column width in px. If absent, no column for
            this key can be added in list view.
        "filter": If true, one can filter results by this key
        "find": If true, this key will appear as an option in the find element
        "flag": Can be "country" or "language". If set (and filter is true), a
            flag icon corresponding to the field's value will be displayed.
        "format": {type: string, args: [value, value, ...]}, used for special
            formatting. This will invoke Ox.formatType(args). For details, see
            https://oxjs.org/#doc/Ox.formatArea etc.
        "secondaryId": If true, loading the URL "/value" will redirect to the
            corresponding item, in case there is an exact match for this key
        "sort": If true, one can sort results by this key
        "sortOperator": Sort order ("+" or "-"), in case it differs from the
            default for the key's type ("+" for strings, "-" for numbers)
        "sortType": Special sort type ("person" or "title") which can be
            further configured in "Manage Names" or "Manage Titles"
        "value": {key: string, type: string} or {layer: string, type: string},
            for keys whose value is derived from other keys or layers (like
            "number of actors" or "words per minute"). Possible values for type
            are "length", "lengthperminute", "words", and "wordsperminute".
            Alternatively, "value" can be set to the string "capability", which
            results in an itemKey whose boolean value indicates the presence or
            absence of a userLevel-dependent capability. This can be used to
            create queries and lists like "all items this user can play" etc.
        "values": [value, value, ...] Ordered list of values, in case "type" is
            "enum"
    */
    "itemKeys": [
        {
            "id": "*",
            "title": "All",
            "type": "text",
            "find": true
        },
        {
            "id": "title",
            "title": "Title",
            "type": "string",
            "additionalSort": [{"key": "year", "operator": "-"}, {"key": "director", "operator": "+"}],
            "autocomplete": true,
            "autocompleteSort": [{"key": "likes", "operator": "-"}],
            "columnRequired": true,
            "columnWidth": 180,
            "find": true,
            "sort": true,
            "sortType": "title"
        },
        {
            "id": "director",
            "title": "Director",
            "type": ["string"],
            "additionalSort": [{"key": "year", "operator": "-"}, {"key": "title", "operator": "-"}],
            "autocomplete": true,
            "columnRequired": true,
            "columnWidth": 180,
            "filter": true,
            "find": true,
            "sort": true,
            "sortType": "person"
        },
        {
            "id": "country",
            "title": "Country",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 120,
            "filter": true,
            "find": true,
            "flag": "country",
            "sort": true
        },
        {
            "id": "year",
            "title": "Year",
            "type": "year",
            "additionalSort": [{"key": "director", "operator": "+"}, {"key": "title", "operator": "+"}],
            "autocomplete": true,
            "columnWidth": 60,
            "filter": true,
            "find": true,
            "sort": true
        },
        {
            "id": "language",
            "title": "Language",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 120,
            "filter": true,
            "find": true,
            "flag": "language",
            "sort": true
        },
        {
            "id": "runtime", 
            "title": "Runtime", 
            "type": "time",
            "columnWidth": 60,
            "format": {"type": "duration", "args": [0, "short"]},
            "sort": true
        },
        {
            "id": "color",
            "title": "Color",
            "type": ["string"],
            "columnWidth": 120,
            "filter": true,
            "sort": true
        },
        {
            "id": "sound",
            "title": "Sound",
            "type": ["string"],
            "columnWidth": 120,
            "filter": true,
            "sort": true
        },
        {
            "id": "writer",
            "title": "Writer",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 180,
            "filter": true,
            "find": true,
            "sort": true,
            "sortType": "person"
        },
        {
            "id": "producer",
            "title": "Producer",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 180,
            "filter": true,
            "find": true,
            "sort": true,
            "sortType": "person"
        },
        {
            "id": "cinematographer",
            "title": "Cinematographer",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 180,
            "filter": true,
            "find": true,
            "sort": true,
            "sortType": "person"
        },
        {
            "id": "editor",
            "title": "Editor",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 180,
            "filter": true,
            "find": true,
            "sort": true,
            "sortType": "person"
        },
        {
            "id": "actor",
            "title": "Actor",
            "type": ["string"],
            "autocomplete": true,
            "filter": true,
            "find": true,
            "sortType": "person"
        },
        {
            "id": "numberofactors",
            "title": "Number of Actors",
            "type": "integer",
            "columnWidth": 60,
            "sort": true,
            "value": {"key": "actor", "type": "length"}
        },
        {
            "id": "character", 
            "title": "Character", 
            "type": ["string"],
            "autocomplete": true,
            "find": true,
            "sortType": "string"
        },
        {
            "id": "name",
            "title": "Name",
            "type": ["string"],
            "autocomplete": true,
            "find": true
        },
        {
            "id": "productionCompany",
            "title": "Production Company",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 180,
            "filter": true,
            "find": true,
            "sort": true
        },
        {
            "id": "series",
            "title": "TV Series",
            "type": "boolean"
        },
        {
            "id": "genre", 
            "title": "Genre",
            "type": ["string"],
            "autocomplete": true,
            "columnWidth": 120,
            "filter": true,
            "find": true,
            "sort": true
        },
        {
            "id": "keyword", 
            "title": "Keyword",
            "type": ["string"],
            "autocomplete": true,
            "filter": true,
            "find": true
        },
        {
            "id": "summary",
            "title": "Summary",
            "type": "text",
            "find": true
        },
        {
            "id": "trivia",
            "title": "Trivia",
            "type": ["text"]
        },
        {
            "id": "releasedate",
            "title": "Release Date",
            "type": "date",
            "columnWidth": 120,
            "format": {"type": "date", "args": ["%a, %b %e, %Y"]},
            "sort": true
        },
        {
            "id": "budget",
            "title": "Budget",
            "type": "integer",
            "columnWidth": 90,
            "format": {"type": "currency", "args": ["$"]},
            "sort": true
        },
        {
            "id": "gross",
            "title": "Gross",
            "type": "integer",
            "columnWidth": 90,
            "format": {"type": "currency", "args": ["$"]},
            "sort": true
        },
        {
            "id": "profit",
            "title": "Profit",
            "type": "integer",
            "columnWidth": 90,
            "format": {"type": "currency", "args": ["$"]},
            "sort": true
        },
        {
            "id": "votes",
            "title": "Mainstream Score",
            "type": "float",
            "columnWidth": 60,
            "default": 0,
            "format": {"type": "ColorPercent", "args": [1, true]},
            "sort": true
        },
        {
            "id": "likes",
            "title": "Arthouse Score",
            "type": "float",
            "columnWidth": 60,
            "default": 0,
            "format": {"type": "ColorPercent", "args": [1, true]},
            "sort": true
        },
        {
            "id": "notes",
            "title": "Notes",
            "type": "text",
            "capability": "canEditMetadata"
        },
        {
            "id": "id",
            "title": "ID",
            "type": "string",
            "columnWidth": 90,
            "sort": true
        },
        {
            "id": "oxdbId",
            "title": "0xDB ID",
            "type": "string",
            "columnWidth": 90,
            "sort": true
        },
        {
            "id": "subtitles",
            "title": "Subtitles",
            "type": "layer",
            "find": true
        },
        {
            "id": "duration",
            "title": "Duration",
            "type": "time",
            "columnWidth": 90,
            "format": {"type": "duration", "args": []},
            "sort": true
        },
        {
            "id": "resolution",
            "title": "Resolution",
            "type": ["integer"],
            "capability": "canSeeMedia",
            "columnWidth": 90,
            "format": {"type": "resolution", "args": ["px"]},
            "sort": true
        },
        {
            "id": "aspectratio",
            "title": "Aspect Ratio",
            "type": "float",
            "columnWidth": 90,
            "format": {"type": "unit", "args": [":1", 3]},
            "sort": true
        },
        {
            "id": "pixels",
            "title": "Pixels",
            "type": "integer",
            "capability": "canSeeMedia",
            "columnWidth": 90,
            "format": {"type": "value", "args": ["px"]},
            "sort": true
        },
        {
            "id": "hue",
            "title": "Hue",
            "type": "float",
            "columnWidth": 90,
            "format": {"type": "color", "args": ["hue"]},
            "sort": true,
            "sortOperator": "+"
        },
        {
            "id": "saturation",
            "title": "Saturation",
            "type": "float",
            "columnWidth": 90,
            "format": {"type": "color", "args": ["saturation"]},
            "sort": true
        },
        {
            "id": "lightness",
            "title": "Lightness",
            "type": "float",
            "columnWidth": 90,
            "format": {"type": "color", "args": ["lightness"]},
            "sort": true
        },
        {
            "id": "volume",
            "title": "Volume",
            "type": "float",
            "columnWidth": 60,
            "format": {"type": "color", "args": ["lightness"]},
            "sort": true
        },
        {
            "id": "numberofcuts",
            "title": "Number of Cuts",
            "type": "integer",
            "columnWidth": 60,
            "format": {"type": "number", "args": []},
            "sort": true,
            "value": {"key": "cuts", "type": "length"}
        },
        {
            "id": "cutsperminute",
            "title": "Cuts per Minute",
            "type": "float",
            "columnWidth": 60,
            "format": {"type": "number", "args": [3]},
            "sort": true,
            "value": {"key": "cuts", "type": "lengthperminute"}
        },
        {
            "id": "words",
            "title": "Number of Words",
            "type": "integer",
            "columnWidth": 60,
            "format": {"type": "number", "args": []},
            "sort": true,
            "value": {"layer": "subtitles", "type": "words"}
        },
        {
            "id": "wordsperminute",
            "title": "Words per Minute",
            "type": "float",
            "columnWidth": 60,
            "format": {"type": "number", "args": [3]},
            "sort": true,
            "value": {"layer": "subtitles", "type": "wordsperminute"}
        },
        {
            "id": "size",
            "title": "Size",
            "type": "integer",
            "capability": "canSeeSize",
            "columnWidth": 60,
            "format": {"type": "value", "args": ["B"]},
            "sort": true
        },
        {
            "id": "bitrate",
            "title": "Bitrate",
            "type": "integer",
            "capability": "canSeeMedia",
            "columnWidth": 60,
            "format": {"type": "value", "args": ["bps"]},
            "sort": true
        },
        {
            "id": "parts",
            "title": "Number of Parts",
            "type": "integer",
            "capability": "canSeeMedia",
            "columnWidth": 60,
            "sort": true
        },
        {
            "id": "numberoffiles",
            "title": "Number of Files",
            "type": "integer",
            "capability": "canSeeMedia",
            "columnWidth": 60,
            "sort": true,
            "value": {"key": "files", "type": "length"}
        },
        {
            "id": "filename",
            "title": "Filename",
            "type": ["string"],
            "capability": "canSeeMedia",
            "find": true
        },
        {
            "id": "created",
            "title": "Date Created",
            "type": "date",
            "columnWidth": 150,
            "format": {"type": "date", "args": ["%Y-%m-%d %H:%M:%S"]},
            "sort": true
        },
        {
            "id": "modified",
            "title": "Last Modified",
            "type": "date",
            "columnWidth": 150,
            "format": {"type": "date", "args": ["%Y-%m-%d %H:%M:%S"]},
            "sort": true
        },
        {
            "id": "accessed",
            "title": "Last Accessed",
            "type": "date",
            "capability": "canSeeAccessed",
            "columnWidth": 150,
            "format": {"type": "date", "args": ["%Y-%m-%d %H:%M:%S"]},
            "sort": true
        },
        {
            "id": "timesaccessed",
            "title": "Times Accessed",
            "type": "integer",
            "capability": "canSeeAccessed",
            "columnWidth": 60,
            "format": {"type": "number", "args": []},
            "sort": true
        },
        {
            "id": "rightslevel",
            "title": "Rights Level",
            "type": "enum",
            "columnWidth": 90,
            "format": {"type": "ColorLevel", "args": [
                ["Public", "Relaxed", "Regular", "Restricted", "Private"]
            ]},
            "sort": true,
            "sortOperator": "+",
            "values": ["Public", "Relaxed", "Regular", "Restricted", "Private", "Unknown"]
        },
        {
            "id": "canplayvideo",
            "title": "Can Play Video",
            "type": "boolean",
            "value": "capability"
        },
        {
            "id": "canplayclips",
            "title": "Can Play Clips",
            "type": "boolean",
            "value": "capability"
        },
        {
            "id": "random",
            "title": "Random",
            "type": "integer",
            "sort": true
        }
    ],
    /*
    "itemName" specifies the name of items ("Movies", "Videos" or similar).
    Note that anything excessively long may cause layout errors.
    */
    "itemName": {
        "singular": "Movie",
        "plural": "Movies"
    },
    /*
    "itemRequiresVideo" regulates if items without video can be created. If set
    to true, the only way to add a new item is to upload a new video.
    */
    "itemRequiresVideo": true,
    /*
    "itemTitleKeys" is a list of itemKeys required to compose the item title
    displayed at the top of the screen. This title can be customized by adding
    "/static/js/getItemTitle.SITENAME.js".
    */
    "itemTitleKeys": ["title", "director", "year"],
    /*
    "itemViews" is an ordered list of available item views. Implemented views
    are "info", "documents", "player", "editor", "timeline", "clips", "map",
    "calendar", "data" and "media".
    */
    "itemViews": [
        {"id": "info", "title": "Info"},
        {"id": "player", "title": "Player"},
        {"id": "editor", "title": "Editor"},
        {"id": "timeline", "title": "Timeline"},
        {"id": "clips", "title": "Clips"},
        {"id": "map", "title": "Map"},
        {"id": "calendar", "title": "Calendar"},
        {"id": "data", "title": "Data"},
        {"id": "media", "title": "Media"}
    ],
    /*
    "language" is the default language for annotations of type "text". Text in
    other languages can be added via markup, for example:
        <span lang="fr">Voilà!</span>
    */
    "language": "en",
    /*
    "languages" is the list of languages that the interface can be switched to.
    Currently, localization exists for "ar", "el", "en" and "hi".
    */
    "languages": ["ar", "el", "en", "hi"],
    // fixme: should be renamed to annotationLayers
    /*
    "layers" defines the types of time-based annotations that can be entered.
    Required keys are:
        "id": Internal ID
        "item": Name of one such annotation (singular)
        "title": Display title
        "type": Can be "entity", "string" or "text" (strings cannot contain
            line breaks, text can contain HTML markup).
    Optional keys are:
        "autocomplete": Available if the layer is used as a filter
        "canAddAnnotations": Permissions per user level
        "canPlayClips": If true, clips from this layer will play for users
            with canPlayClips access
        "entity": ID of the referenced entity (if type is "entity")
        "hasEvents": If true, the calendar will be populated with matches from
            this layer
        "hasPlaces": If true, the map will be populated with matches from this
            layer
        "isSubtitles": If true, this layer will be displayed as subtitles
        "overlap": If true, overlapping annotations are allowed. Note that
            enforcement of "overlap": false is not implemented
        "showInfo": If true, user and creation time will be displayed in the
            tooltip that appears on mouseover.
    */
    "layers": [
        {
            "id": "privatenotes",
            "title": "Private Notes",
            "canAddAnnotations": {"member": true, "friend": true, "staff": true, "admin": true},
            "item": "Private Note",
            "overlap": true,
            "private": true,
            "showInfo": true,
            "type": "text"
        },
        {
            "id": "publicnotes",
            "title": "Public Notes",
            "canAddAnnotations": {"member": true, "friend": true, "staff": true, "admin": true},
            "item": "Public Note",
            "overlap": true,
            "showInfo": true,
            "type": "text"
        },
        {
            "id": "subtitles",
            "title": "Subtitles",
            "canAddAnnotations": {"staff": true, "admin": true},
            "canPlayClips": true,
            "hasEvents": true,
            "hasPlaces": true,
            "isSubtitles": true,
            "item": "Subtitle",
            "type": "text"
        }
    ],
    /*
    "listViews" is an ordered list of available list views. Implemented views
    are "list", "grid", "timelines", "clips", "clip", "map" and "calendar".
    */
    "listViews": [
        {"id": "list", "title": "as List"},
        {"id": "grid", "title": "as Grid"},
        //{"id": "info", "title": "with Info"},
        {"id": "timelines", "title": "with Timelines"},
        {"id": "clips", "title": "with Clips"},
        //{"id": "maps", "title": "with Maps"},
        //{"id": "calendars", "title": "with Calendars"},
        {"id": "clip", "title": "as Clips"},
        //{"id": "video", "title": "as Video"},
        {"id": "map", "title": "on Map"},
        {"id": "calendar", "title": "on Calendar"}
    ],
    /*
    "media" defines additional media that gets added when importing items.
        "importPosters": If true, a poster file will be imported (if present)
        "importFrames": If true, 3 full-resolution frames per file will be
            imported. This is useful to render high-resolution icons and
            posters for an instance that has only low-resolution video.
    */
    "media": {
        "importPosters": true,
        "importFrames": true
    },
    /*
    "menuExtras" can be used to add extra functionality to the main menu bar.
    The plug-in architecture is not yet finalized, documentation forthcoming.
    */
    "menuExtras": [
        "user",
        //"persona",
        //"locale",
        "reload"
    ],
    /*
    "personalLists" specifies which pre-defined lists a new member will have
    after signup. "title" is required. If "query" is present, this defines a
    smart list. "query" can be any pan.do/ra query object, see /api/find for
    further documentation. If you need to reference the username (for example
    in order to include a default "My Videos" list), you can use the syntax
    {"user": "{username}"}
    */
    "personalLists": [
        {"title": "Favorites"},
        {"title": "1960s", "query": {"conditions": [{"key": "year", "value": ["1960", "1970"], "operator": "="}], "operator": "&"}}
        //{"title": "Movies with Video", "query": {"conditions": [{"key": "canplayvideo", "value": "true", "operator": "="}], "operator": "&"}},
        //{"title": "Movies with Clips", "query": {"conditions": [{"key": "canplayclips", "value": "true", "operator": "="}], "operator": "&"}}
    ],
    /*
    "posters" contains details about the poster icons. "ratio" is the default
    ratio (used to display a placeholder while poster icons are loading).
    */
    "posters": {
        "ratio": 0.625
    },
    /*
    "rightsLevel" defines which initial rights level will be assigned to items
    and texts created by users of these user levels.
    */
    "rightsLevel": {"member": 4, "staff": 3, "admin": 2},
    /*
    "rightsLevels" is an ordered list of rights levels, one of which will be
    assigned to each item.
    */
    "rightsLevels": [
        {"name": "Public", "color": [128, 255, 128]},
        {"name": "Relaxed", "color": [192, 255, 128]},
        {"name": "Regular", "color": [255, 255, 128]},
        {"name": "Restricted", "color": [255, 192, 128]},
        {"name": "Private", "color": [255, 128, 128]}
    ],
    /*
    "site" contains various settings for this instance. In "email", "contact"
    if the address in the contact form (to), "system" is the address used by
    the system (from).
    */
    "site": {
        "description": "0xDB is an experimental - and to some degree imaginary - movie database. It is intended to help us rethink the future of cinema on the Internet, just as it tries to push the boundaries of what we understand as \"web applications\". What 0xDB proposes is an entirely new approach to visualizing and navigating moving images, and we hope that it can serve as a point of reference for individuals and institutions who are dealing with large collections of films.",
        // FIXME: "from" and "to" would be more intuitive as keys here
        "email": {
            // E-mail address in contact form (to)
            "contact": "0xDB@0xDB.org",
            "footer": "-- \n0xDB - https://0xDB.org",
            "prefix": "0xDB Newsletter -",
            // E-mail address uses by the system (from)
            "system": "0xDB@0xDB.org"
        },
        "https": true,
        "id": "0xdb",
        "name": "0xDB",
        "sendReferrer": false,
        "url": "0xDB.org"
    },
    /*
    "sitePages" defines the sections of the main site dialog. If "news" is
    present, this will add an interface to add news items. If "contact" is
    present, this will add an interface to contact the site owners.
    */
    "sitePages": [
        {"id": "about", "title": "About"},
        {"id": "news", "title": "News"},
        // {"id": "tour", "title": "Take a Tour"},
        {"id": "faq", "title": "Frequently Asked Questions"},
        {"id": "terms", "title": "Terms of Service"},
        {"id": "rights", "title": "Rights Management"},
        {"id": "contact", "title": "Contact"}
    ],
    /*
    "sites" specifies which other pan.do/ra instances, if any, will appear in
    the user interface for creating embeds. This allows for easier creation of
    cross-instance references.
    */
    "sites": [
        {"name": "Indiancine.ma", "url": "indiancine.ma", "https": true},
        {"name": "Pad.ma", "url": "pad.ma", "https": true}
    ],
    /*
    "textRightsLevels" defines a list of rights levels for texts.
    */
    "textRightsLevels": [
        {"name": "Public", "color": [128, 255, 128]},
        {"name": "Private", "color": [255, 128, 128]}
    ],
    /*
    "themes" is a list of themes that the user interface can be switched to.
    Currently available themes are "oxlight", "oxmedium" and "oxdark". The
    default theme can be set in user.ui.theme.
    */
    "themes": ["oxlight", "oxmedium", "oxdark"],
    /*
    "timelines" is a list of timeline types. Implemented types are "antialias",
    "slitscan", "keyframes" and "audio".
    */
    "timelines": [
        {"id": "antialias", "title": "Anti-Alias"},
        {"id": "slitscan", "title": "Slit-Scan"},
        {"id": "keyframes", "title": "Keyframes"},
        {"id": "audio", "title": "Waveform"}
    ],
    /*
    "totals" specifies which totals are displayed in the status bar at the
    bottom of list views. Possible ids are "duration", "files", "items",
    "pixels" and "size". Adding a capability limits the display of a specific
    total to users of the corresponding user levels.
    */
    "totals": [
        {"id": "items"},
        {"id": "runtime"},
        {"id": "files", "capability": "canSeeMedia"},
        {"id": "duration", "capability": "canSeeMedia"},
        {"id": "size", "capability": "canSeeMedia"},
        {"id": "pixels"}
    ],
    /*
    If "tv" is set to true, then in TV mode, the site logo will be displayed in
    the corner of the screen.
    */
    "tv": {
        "showLogo": false
    },
    /*
    The "user" object contains the default user settings. "ui" is the default
    interface state for new users, and after selecting "Reset UI Settings" in
    Preferences -> Advanced. This is the place to configure various defaults,
    like the site-wide language and theme, the default list and item views, the
    default set of filters, etc.
    Please make sure that in case you rename or remove entries that are
    referenced in "ui", you update them here as well.
    */
    "user": {
        "level": "guest",
        "newsletter": true,
        "ui": {
            "annotationsCalendarSize": 128,
            "annotationsMapSize": 128,
            "annotationsRange": "all",
            "annotationsSize": 256,
            "annotationsSort": "position",
            "calendarFind": "",
            "calendarSelection": "",
            "clipColumns": 2,
            "columns": {
                "Colors": {
                    "columns": ["title", "director", "country", "year", "hue", "saturation", "brightness"],
                    "columnWidth": {}
                }
            },
            "documents": {},
            "documentSize": 256,
            "documentsSelection": {},
            "documentsSort": [{"key": "name", "operator": "+"}],
            "documentsView": "grid",
            "edit": "",
            "edits": {},
            "editSelection": [],
            "editSort": [
                {"key": "index", "operator": "+"},
                {"key": "year", "operator": "+"},
                {"key": "director", "operator": "+"},
                {"key": "title", "operator": "+"},
                {"key": "position", "operator": "+"},
                {"key": "duration", "operator": "+"}
            ],
            "editView": "list",
            "embedSize": 256,
            "entitiesSelection": {},
            "entitiesType": "",
            "filters": [
                {"id": "director", "sort": [{"key": "items", "operator": "-"}]},
                {"id": "country", "sort": [{"key": "items", "operator": "-"}]},
                {"id": "year", "sort": [{"key": "name", "operator": "-"}]},
                {"id": "language", "sort": [{"key": "items", "operator": "-"}]},
                {"id": "genre", "sort": [{"key": "items", "operator": "-"}]}
            ],
            "filtersSize": 176,
            "find": {"conditions": [], "operator": "&"},
            "followPlayer": true,
            "help": "",
            "icons": "posters",
            "infoIconSize": 256,
            "item": "",
            "itemFind": "",
            "itemSort": [{"key": "position", "operator": "+"}],
            "itemView": "info",
            "listColumns": ["title", "director", "country", "year", "language", "runtime", "genre"],
            "listColumnWidth": {},
            "listSelection": [],
            "listSort": [
                {"key": "director", "operator": "+"},
                {"key": "year", "operator": "-"},
                {"key": "title", "operator": "+"}
            ],
            "listView": "grid",
            "lists": {},
            "locale": "en",
            "mapFind": "",
            "mapSelection": "",
            "page": "",
            "part": {
                "api": "",
                "documents": "",
                "entities": "",
                "faq": "",
                "help": "",
                "news": "",
                "preferences": "",
                "tv": ""
            },
            "section": "items",
            "sequenceMode": "shape",
            "sequenceSort": [{"key": "director", "operator": "+"}],
            "showAdvancedEmbedOptions": false,
            "showAnnotations": true,
            "showAnnotationsCalendar": true,
            "showAnnotationsMap": true,
            "showBrowser": true,
            "showCalendarControls": true, // fixme: should be false
            "showClips": true,
            "showDocument": true,
            "showFilters": true,
            "showIconBrowser": false,
            "showInfo": true,
            "showLayers": {
                "privatenotes": true,
                "publicnotes": true,
                "subtitles": true
            },
            "showMapControls": false,
            "showMapLabels": false,
            "showFolder": {
                "edits": {
                    "personal": true,
                    "favorite": true,
                    "featured": true
                },
                "items": {
                    "personal": true,
                    "favorite": true,
                    "featured": true,
                    "volumes": true
                },
                "texts": {
                    "personal": true,
                    "favorite": true,
                    "featured": true
                }
            },
            "showReflections": true,
            "showSidebar": true,
            "showSitePosters": false,
            "showTimeline": true,
            "sidebarSize": 256,
            "text": "",
            "texts": {},
            "theme": "oxdark",
            "updateAdvancedFindResults": false,
            "videoLoop": false,
            "videoMuted": false,
            "videoPoints": {},
            "videoResolution": 96,
            "videoScale": "fit",
            "videoSize": "small",
            "videoSubtitles": true,
            "videoSubtitlesOffset": 0,
            "videoTimeline": "antialias",
            "videoView": "player",
            "videoVolume": 1
        },
        "script": "",
        "username": "",
        "volumes": []
    },
    // fixme: this should include colors
    /*
    "userLevels" is an ordered list of user classes. The first entry is for
    unregistered visitors.
    */
    "userLevels": ["guest", "member", "friend", "staff", "admin"],
    /*
    "video" contains the video settings.
        "formats": Supported video formats. Should be ["webm", "mp4"], or
            ["webm"] in case iDevices are not part of the audience
        "previewRatio": Aspect ratio used in the info panel in the bottom left
            corner of the screen
        "resolutions": List of video resolutions. Supported values are 96, 144,
            240, 288, 360, 432, 480, 720 and 1080.
        "torrent": If true, video downloads are offered via BitTorrent
    */
    "video": {
        "torrent": true,
        "formats": ["webm", "mp4"],
        // fixme: this should be named "ratio" or "defaultRatio",
        // as it also applies to clip lists (on load)
        "previewRatio": 1.7777777778,
        "resolutions": [96]
    }
}
